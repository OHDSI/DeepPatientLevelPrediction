# When a new release is published,
# upload image to Dockerhub.
#
# Requires the following repository secrets:
# - DOCKER_IMAGE - Configured as a secret so it can be configured per fork.
# - DOCKER_HUB_USERNAME
# - DOCKER_HUB_ACCESS_TOKEN
# - GITHUBPAT - The github account to use for downloading CRAN dependencies.
#                      Needed to avoid "API rate limit exceeded" from github.
name: Release Docker

on:
  push:
    branches:
      - 110-docker
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      docker_image:
        description: 'DeepPatientLevelPrediction docker image.'
        default: 'ohdsi/deep_plp'
        type: string

jobs:
  docker:
    runs-on: ubuntu-latest
    env:
      docker_image: ${{ inputs.docker_image }}   
    steps:
      - uses: actions/checkout@v4

      # ------------------------------------
      # The pattern for the following steps is specified
      # in OHDSI/WebAPI.

      # Add Docker labels and tags
      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_IMAGE }}
          tag-match: v(.*)
          tag-match-group: 1
      # Setup docker build environment
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

       # Log environment variables for debugging
      - name: Debug DOCKER_IMAGE
        run: echo "DOCKER_IMAGE is ${{ env.DOCKER_IMAGE }}"

      - name: Set build parameters
        id: build_params
        run: |
          echo "SHA8=${GITHUB_SHA::8}" >> $GITHUB_ENV
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: ./
          file: Dockerfile
          platforms: linux/amd64
          push: true
          secrets: |
            build_github_pat=${{ secrets.GH_TOKEN }}
          build-args: |
            GIT_BRANCH=${{ steps.docker_meta.outputs.version }}
            GIT_COMMIT_ID_ABBREV=${{ env.SHA8 }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          # Use runtime labels from docker_meta as well as fixed labels
          labels: |
            ${{ steps.docker_meta.outputs.labels }}
            maintainer=Egill A. Fridgeirsson <e.fridgeirsson@erasmusmc.nl>
            org.opencontainers.image.authors=Egill A. Fridgeirsson <e.fridgeirsson@erasmusmc.nl>, Henrik John <l.john@erasmusmc.nl>
            org.opencontainers.image.vendor=OHDSI
            org.opencontainers.image.licenses=Apache-2.0

      - name: Inspect image
        run: |
          docker pull ${{ env.DOCKER_IMAGE }}:${{ steps.docker_meta.outputs.version }}
          docker image inspect ${{ env.DOCKER_IMAGE }}:${{ steps.docker_meta.outputs.version }}
