% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LRFinder.R
\name{lrFinder}
\alias{lrFinder}
\title{Find learning rate that decreases loss the most}
\usage{
lrFinder(
  dataset,
  modelType,
  modelParams,
  estimatorSettings,
  minLR = 1e-07,
  maxLR = 1,
  numLR = 100,
  smooth = 0.05,
  divergenceThreshold = 4
)
}
\arguments{
\item{dataset}{torch dataset, training dataset}

\item{modelType}{the function used to initialize the model}

\item{modelParams}{parameters used to initialize model}

\item{estimatorSettings}{settings for estimator to fit model}

\item{minLR}{lower bound of learning rates to search through}

\item{maxLR}{upper bound of learning rates to search through}

\item{numLR}{number of learning rates to go through}

\item{smooth}{smoothing to use on losses}

\item{divergenceThreshold}{if loss increases this amount above the minimum, stop.}
}
\description{
Method originated from https://arxiv.org/abs/1506.01186 but this
implementation draws inspiration from various other implementations such as
pytorch lightning, fastai, luz and pytorch-lr-finder.
}
