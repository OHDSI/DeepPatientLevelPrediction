% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TrainingCache-class.R
\name{TrainingCache}
\alias{TrainingCache}
\title{TrainingCache}
\value{
Whether the provided and cached parameter grid is identical

Grid search results from the training cache

Last grid search index
}
\description{
Parameter caching for training persistence and continuity
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-TrainingCache-new}{\code{TrainingCache$new()}}
\item \href{#method-TrainingCache-isParamGridIdentical}{\code{TrainingCache$isParamGridIdentical()}}
\item \href{#method-TrainingCache-saveGridSearchPredictions}{\code{TrainingCache$saveGridSearchPredictions()}}
\item \href{#method-TrainingCache-saveModelParams}{\code{TrainingCache$saveModelParams()}}
\item \href{#method-TrainingCache-getGridSearchPredictions}{\code{TrainingCache$getGridSearchPredictions()}}
\item \href{#method-TrainingCache-getLastGridSearchIndex}{\code{TrainingCache$getLastGridSearchIndex()}}
\item \href{#method-TrainingCache-dropCache}{\code{TrainingCache$dropCache()}}
\item \href{#method-TrainingCache-clone}{\code{TrainingCache$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TrainingCache-new"></a>}}
\if{latex}{\out{\hypertarget{method-TrainingCache-new}{}}}
\subsection{Method \code{new()}}{
Creates a new training cache
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TrainingCache$new(inDir)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{inDir}}{Path to the analysis directory}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TrainingCache-isParamGridIdentical"></a>}}
\if{latex}{\out{\hypertarget{method-TrainingCache-isParamGridIdentical}{}}}
\subsection{Method \code{isParamGridIdentical()}}{
Checks whether the parameter grid in the model settings is identical to
the cached parameters.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TrainingCache$isParamGridIdentical(inModelParams)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{inModelParams}}{Parameter grid from the model settings}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TrainingCache-saveGridSearchPredictions"></a>}}
\if{latex}{\out{\hypertarget{method-TrainingCache-saveGridSearchPredictions}{}}}
\subsection{Method \code{saveGridSearchPredictions()}}{
Saves the grid search results to the training cache
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TrainingCache$saveGridSearchPredictions(inGridSearchPredictions)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{inGridSearchPredictions}}{Grid search predictions}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TrainingCache-saveModelParams"></a>}}
\if{latex}{\out{\hypertarget{method-TrainingCache-saveModelParams}{}}}
\subsection{Method \code{saveModelParams()}}{
Saves the parameter grid to the training cache
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TrainingCache$saveModelParams(inModelParams)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{inModelParams}}{Parameter grid from the model settings}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TrainingCache-getGridSearchPredictions"></a>}}
\if{latex}{\out{\hypertarget{method-TrainingCache-getGridSearchPredictions}{}}}
\subsection{Method \code{getGridSearchPredictions()}}{
Gets the grid search results from the training cache
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TrainingCache$getGridSearchPredictions()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TrainingCache-getLastGridSearchIndex"></a>}}
\if{latex}{\out{\hypertarget{method-TrainingCache-getLastGridSearchIndex}{}}}
\subsection{Method \code{getLastGridSearchIndex()}}{
Gets the last index from the cached grid search
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TrainingCache$getLastGridSearchIndex()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TrainingCache-dropCache"></a>}}
\if{latex}{\out{\hypertarget{method-TrainingCache-dropCache}{}}}
\subsection{Method \code{dropCache()}}{
Remove the training cache from the analysis path
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TrainingCache$dropCache()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TrainingCache-clone"></a>}}
\if{latex}{\out{\hypertarget{method-TrainingCache-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TrainingCache$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
