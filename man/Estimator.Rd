% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Estimator.R
\name{Estimator}
\alias{Estimator}
\title{Estimator}
\description{
A generic R6 class that wraps around a torch nn module and can be used to
fit and predict the model defined in that module.
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Estimator-new}{\code{Estimator$new()}}
\item \href{#method-Estimator-fit}{\code{Estimator$fit()}}
\item \href{#method-Estimator-fitEpoch}{\code{Estimator$fitEpoch()}}
\item \href{#method-Estimator-score}{\code{Estimator$score()}}
\item \href{#method-Estimator-finishFit}{\code{Estimator$finishFit()}}
\item \href{#method-Estimator-fitWholeTrainingSet}{\code{Estimator$fitWholeTrainingSet()}}
\item \href{#method-Estimator-save}{\code{Estimator$save()}}
\item \href{#method-Estimator-predictProba}{\code{Estimator$predictProba()}}
\item \href{#method-Estimator-predict}{\code{Estimator$predict()}}
\item \href{#method-Estimator-batchToDevice}{\code{Estimator$batchToDevice()}}
\item \href{#method-Estimator-itemOrDefaults}{\code{Estimator$itemOrDefaults()}}
\item \href{#method-Estimator-clone}{\code{Estimator$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Estimator-new"></a>}}
\if{latex}{\out{\hypertarget{method-Estimator-new}{}}}
\subsection{Method \code{new()}}{
Creates a new estimator
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Estimator$new(
  baseModel,
  modelParameters,
  fitParameters,
  optimizer = torch::optim_adam,
  criterion = torch::nn_bce_with_logits_loss,
  scheduler = torch::lr_reduce_on_plateau,
  device = "cpu",
  patience = 4
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{baseModel}}{The torch nn module to use as model}

\item{\code{modelParameters}}{Parameters to initialize the baseModel}

\item{\code{fitParameters}}{Parameters required for the estimator fitting}

\item{\code{optimizer}}{A torch optimizer to use, default is Adam}

\item{\code{criterion}}{The torch loss function to use, defaults to
binary cross entropy with logits}

\item{\code{scheduler}}{learning rate scheduler to use}

\item{\code{device}}{Which device to use for fitting, default is cpu}

\item{\code{patience}}{Patience to use for early stopping}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Estimator-fit"></a>}}
\if{latex}{\out{\hypertarget{method-Estimator-fit}{}}}
\subsection{Method \code{fit()}}{
fits the estimator
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Estimator$fit(dataset, testDataset)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataset}}{a torch dataset to use for model fitting}

\item{\code{testDataset}}{a torch dataset to use for early stopping}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Estimator-fitEpoch"></a>}}
\if{latex}{\out{\hypertarget{method-Estimator-fitEpoch}{}}}
\subsection{Method \code{fitEpoch()}}{
fits estimator for one epoch (one round through the data)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Estimator$fitEpoch(dataset, batchIndex)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataset}}{torch dataset to use for fitting}

\item{\code{batchIndex}}{indices of batches}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Estimator-score"></a>}}
\if{latex}{\out{\hypertarget{method-Estimator-score}{}}}
\subsection{Method \code{score()}}{
calculates loss and auc after training for one epoch
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Estimator$score(dataset, batchIndex)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataset}}{The torch dataset to use to evaluate loss and auc}

\item{\code{batchIndex}}{Indices of batches in the dataset}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
list with average loss and auc in the dataset
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Estimator-finishFit"></a>}}
\if{latex}{\out{\hypertarget{method-Estimator-finishFit}{}}}
\subsection{Method \code{finishFit()}}{
operations that run when fitting is finished
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Estimator$finishFit(valAUCs, modelStateDict, valLosses, epoch, learnRates)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{valAUCs}}{validation AUC values}

\item{\code{modelStateDict}}{fitted model parameters}

\item{\code{valLosses}}{validation losses}

\item{\code{epoch}}{list of epochs fit}

\item{\code{learnRates}}{learning rate sequence used so far}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Estimator-fitWholeTrainingSet"></a>}}
\if{latex}{\out{\hypertarget{method-Estimator-fitWholeTrainingSet}{}}}
\subsection{Method \code{fitWholeTrainingSet()}}{
Fits whole training set on a specific number of epochs
TODO What happens when learning rate changes per epochs?
Ideally I would copy the learning rate strategy from before
and adjust for different sizes ie more iterations/updates???
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Estimator$fitWholeTrainingSet(dataset, learnRates = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataset}}{torch dataset}

\item{\code{learnRates}}{learnRateSchedule from CV}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Estimator-save"></a>}}
\if{latex}{\out{\hypertarget{method-Estimator-save}{}}}
\subsection{Method \code{save()}}{
save model and those parameters needed to reconstruct it
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Estimator$save(path, name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{path}}{where to save the model}

\item{\code{name}}{name of file}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the path to saved model
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Estimator-predictProba"></a>}}
\if{latex}{\out{\hypertarget{method-Estimator-predictProba}{}}}
\subsection{Method \code{predictProba()}}{
predicts and outputs the probabilities
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Estimator$predictProba(dataset)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataset}}{Torch dataset to create predictions for}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
predictions as probabilities
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Estimator-predict"></a>}}
\if{latex}{\out{\hypertarget{method-Estimator-predict}{}}}
\subsection{Method \code{predict()}}{
predicts and outputs the class
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Estimator$predict(dataset, threshold = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataset}}{A torch dataset to create predictions for}

\item{\code{threshold}}{Which threshold to use for predictions}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The predicted class for the data in the dataset
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Estimator-batchToDevice"></a>}}
\if{latex}{\out{\hypertarget{method-Estimator-batchToDevice}{}}}
\subsection{Method \code{batchToDevice()}}{
sends a batch of data to device
assumes batch includes lists of tensors to arbitrary nested depths
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Estimator$batchToDevice(batch)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{batch}}{the batch to send, usually a list of torch tensors}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the batch on the required device
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Estimator-itemOrDefaults"></a>}}
\if{latex}{\out{\hypertarget{method-Estimator-itemOrDefaults}{}}}
\subsection{Method \code{itemOrDefaults()}}{
select item from list, and if it's null sets a default
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Estimator$itemOrDefaults(list, item, default = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{list}}{A list with items}

\item{\code{item}}{Which list item to retrieve}

\item{\code{default}}{The value to return if list doesn't have item}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the list item or default
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Estimator-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Estimator-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Estimator$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
